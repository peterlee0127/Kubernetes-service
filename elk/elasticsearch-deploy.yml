---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: elasticsearch
  labels:
    name: elasticsearch
spec:
  serviceName: elasticsearch
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: elasticsearch
      labels:
        name: elasticsearch
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: default
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4 
          imagePullPolicy: Always
          ports:
            - containerPort: 9200
            - containerPort: 9300
          resources:
            limits:
              cpu: 0.5
              memory: 2Gi
            requests:
              cpu: 0.3
              memory: 500Mi
          volumeMounts:
            - name: elasticsearch-home
              mountPath: /usr/share/elasticsearch/data
      securityContext:
        fsGroup: 1000
      volumes:
        - name: elasticsearch-home
      initContainers:
      - image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-logging-init
        securityContext:
          privileged: true
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-home
  #    annotations:
  #      volume.beta.kubernetes.io/storage-class: managed-nfs-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
         storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-service
  annotations:
    # ensure the client ip is propagated to avoid the invalid crumb issue (k8s <1.7)
    # service.beta.kubernetes.io/external-traffic: OnlyLocal
spec:
  type: NodePort 
  selector:
    name: elasticsearch
  # k8s 1.7+
  externalTrafficPolicy: Local
  ports:
    -
      name: http
      port: 9200
      targetPort: 9200
      protocol: TCP

